
1. What is the difference between `var` and `let`?
   
   `var`: Allows reassignment and redeclaration, hoisted, and has function or global scope.
   
   `let`: Allows reassignment but not redeclaration, block-scoped.

2. What is the difference between `var` and `const`?
   
   `var`: Allows both reassignment and redeclaration, hoisted, and has function or global scope.
   
   `const`: Allows neither reassignment nor redeclaration, block-scoped.

3. What is the difference between `let` and `const`?
   
   `let`: Allows reassignment but not redeclaration, block-scoped.
   
   `const`: Allows neither reassignment nor redeclaration, block-scoped.

4. What is hoisting?
   
   Hoisting is a JavaScript behavior where variable and function declarations are moved to the top of their containing scope during compilation. 
   It allows variables declared with `var` to be accessed (with an undefined value) before their declaration. Function declarations are also hoisted.
    `let` and `const` are block-scoped and not hoisted in the same way.//